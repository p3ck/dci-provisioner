except-interface=lo
bind-dynamic
#interface={{ bridge_name }}
listen-address={{ machine_network_ip| default(local_repo_ip) }}

resolv-file=/etc/resolv.conf
dhcp-range={{ dhcp_start }},{{ dhcp_end }}
dhcp-ignore=tag:!known
dhcp-option=option:router,{{ router|default(machine_network_ip| default(local_repo_ip),true) }}

# Use this server as a time and name server for machines in the lab
dhcp-option=option:dns-server,{{ dns_server|default('0.0.0.0',true) }}
dhcp-option=option:ntp-server,{{ ntp_server|default('0.0.0.0', true) }}
{% if domain is defined %}
domain={{ domain }}
{% endif %}
tftp-root=/var/lib/tftpboot
dhcp-boot=pxelinux.0

# Use a combination of /etc/ethers & /etc/hosts instead of this ?
{% for system in groups['suts'] %}
dhcp-boot=tag:{{ system }}_boot,bootloader/{{ hostvars[system].ip_address | ansible.utils.ip4_hex | upper }}/image,{{ machine_network_ip| default(local_repo_ip) }}
{% endfor %}

{% for system in groups['suts'] %}
dhcp-host={{ hostvars[system].mac }},{{ system }},{{ hostvars[system].ip_address }},set:{{ system }}_boot
address=/{{ system.split('.')| first }}.{{ domain }}/{{ hostvars[system].ip_address }}
{% endfor %}

# vim: set ft=dnsmasq:
